// Code generated by gogen; DO NOT EDIT.

package driver

import (
	"context"

	"github.com/HMasataka/beyond/domain/driver"
	"github.com/HMasataka/beyond/domain/entity"
	"github.com/HMasataka/transactor/rdbms"
	"github.com/volatiletech/sqlboiler/v4/boil"
)

type accountDriver struct {
	clientProvider rdbms.ClientProvider
}

func NewAccountDriver(clientProvider rdbms.ClientProvider) driver.AccountDriver {
	return &accountDriver{
		clientProvider: clientProvider,
	}
}

func (r *accountDriver) Insert(ctx context.Context, target *entity.Account) error {
	client := r.clientProvider.CurrentClient(ctx)
	return target.Insert(ctx, client, boil.Infer())
}

func (r *accountDriver) Update(ctx context.Context, target *entity.Account) error {
	client := r.clientProvider.CurrentClient(ctx)
	_, err := target.Update(ctx, client, boil.Infer())

	return err
}

func (r *accountDriver) Delete(ctx context.Context, target *entity.Account) error {
	client := r.clientProvider.CurrentClient(ctx)
	_, err := target.Delete(ctx, client)

	return err
}
